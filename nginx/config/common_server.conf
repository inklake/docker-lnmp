access_log /var/log/nginx/$server_name@access.log;
# error_log  /var/log/nginx/$server_name@error.log;

add_header Access-Control-Allow-Origin *;
add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

## If no favicon exists return a 204 (no content error).
location = /favicon.ico {
    try_files $uri =204;
    log_not_found off;
    access_log off;
}

## Don't log robots.txt requests.
location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
}

## Regular PHP processing.
# location ~ \.php$ {
#     try_files  $uri =404;
#     fastcgi_pass   php_processes;
#     fastcgi_index  index.php;
#     fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
#     include        fastcgi_params;

#     fastcgi_buffers 8 128k;
# }

location ~ \.php$ {
    # root           html;
    fastcgi_pass   __DOCKER_PHP_FPM__:9000;
    fastcgi_index  index.php;
    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    include        fastcgi_params;
}

## Static files are served directly.
# location ~* \.(?:css|gif|htc|ico|js|jpe?g|png|swf)$ {
#     expires max;
#     log_not_found off;
#     ## No need to bleed constant updates. Send the all shebang in one
#     ## fell swoop.
#     tcp_nodelay off;
#     ## Set the OS file cache.
#     open_file_cache max=1000 inactive=120s;
#     open_file_cache_valid 45s;
#     open_file_cache_min_uses 2;
#     open_file_cache_errors off;
# }

# ## Keep a tab on the 'big' static files.
# location ~* ^.+\.(?:ogg|pdf|pptx?)$ {
#     expires 30d;
#     ## No need to bleed constant updates. Send the all shebang in one
#     ## fell swoop.
#     tcp_nodelay off;
# }